/*! normalize.css v3.0.2 | MIT License | git.io/normalize */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */

html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"], /* 1 */
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */

input[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box; /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

.loadmask {
  background: rgba(128,128,128,0.5);
}
.loadmask .loader .loadbar {
  border-radius: 50px;
  box-shadow: 0 0 3px rgba(0,0,0,0.2);
  position: absolute;
  left: 44.5%;
  top: 37%;
  width: 12%;
  height: 26%;
  background: #000;
  -webkit-animation: loader-fade 1s linear infinite;
  -moz-animation: loader-fade 1s linear infinite;
  -ms-animation: loader-fade 1s linear infinite;
  animation: loader-fade 1s linear infinite;
  opacity: 0;
}
.loadmask .loader .loadbar-1 {
  transform: rotate(0deg) translate(0, -142%);
  -webkit-animation-delay: 0s;
  -moz-animation-delay: 0s;
  -ms-animation-delay: 0s;
  animation-delay: 0s;
}
.loadmask .loader .loadbar-2 {
  transform: rotate(30deg) translate(0, -142%);
  -webkit-animation-delay: -0.9167s;
  -moz-animation-delay: -0.9167s;
  -ms-animation-delay: -0.9167s;
  animation-delay: -0.9167s;
}
.loadmask .loader .loadbar-3 {
  transform: rotate(60deg) translate(0, -142%);
  -webkit-animation-delay: -1.8333s;
  -moz-animation-delay: -1.8333s;
  -ms-animation-delay: -1.8333s;
  animation-delay: -1.8333s;
}
.loadmask .loader .loadbar-4 {
  transform: rotate(90deg) translate(0, -142%);
  -webkit-animation-delay: -2.75s;
  -moz-animation-delay: -2.75s;
  -ms-animation-delay: -2.75s;
  animation-delay: -2.75s;
}
.loadmask .loader .loadbar-5 {
  transform: rotate(120deg) translate(0, -142%);
  -webkit-animation-delay: -3.6667s;
  -moz-animation-delay: -3.6667s;
  -ms-animation-delay: -3.6667s;
  animation-delay: -3.6667s;
}
.loadmask .loader .loadbar-6 {
  transform: rotate(150deg) translate(0, -142%);
  -webkit-animation-delay: -4.5833s;
  -moz-animation-delay: -4.5833s;
  -ms-animation-delay: -4.5833s;
  animation-delay: -4.5833s;
}
.loadmask .loader .loadbar-7 {
  transform: rotate(180deg) translate(0, -142%);
  -webkit-animation-delay: -5.5s;
  -moz-animation-delay: -5.5s;
  -ms-animation-delay: -5.5s;
  animation-delay: -5.5s;
}
.loadmask .loader .loadbar-8 {
  transform: rotate(210deg) translate(0, -142%);
  -webkit-animation-delay: -6.4167s;
  -moz-animation-delay: -6.4167s;
  -ms-animation-delay: -6.4167s;
  animation-delay: -6.4167s;
}
.loadmask .loader .loadbar-9 {
  transform: rotate(240deg) translate(0, -142%);
  -webkit-animation-delay: -7.3333s;
  -moz-animation-delay: -7.3333s;
  -ms-animation-delay: -7.3333s;
  animation-delay: -7.3333s;
}
.loadmask .loader .loadbar-10 {
  transform: rotate(270deg) translate(0, -142%);
  -webkit-animation-delay: -8.25s;
  -moz-animation-delay: -8.25s;
  -ms-animation-delay: -8.25s;
  animation-delay: -8.25s;
}
.loadmask .loader .loadbar-11 {
  transform: rotate(300deg) translate(0, -142%);
  -webkit-animation-delay: -9.1667s;
  -moz-animation-delay: -9.1667s;
  -ms-animation-delay: -9.1667s;
  animation-delay: -9.1667s;
}
.loadmask .loader .loadbar-12 {
  transform: rotate(330deg) translate(0, -142%);
  -webkit-animation-delay: -10.0833s;
  -moz-animation-delay: -10.0833s;
  -ms-animation-delay: -10.0833s;
  animation-delay: -10.0833s;
}
.u-flex {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}
.u-flex-flow-row,
.u-flex-row {
  flex-direction: row;
  -webkit-flex-flow: row;
  -moz-flex-flow: row;
  -ms-flex-flow: row;
  -o-flex-flow: row;
  flex-flow: row;
  flex-flow: row;
  box-orient: horizontal;
  flex-direction: row;
  box-orient: horizontal;
}
.u-flex-flow-column,
.u-flex-column,
.react-datagrid {
  flex-direction: column;
  -webkit-flex-flow: column;
  -moz-flex-flow: column;
  -ms-flex-flow: column;
  -o-flex-flow: column;
  flex-flow: column;
  flex-flow: column;
  box-orient: vertical;
  box-orient: vertical;
}
.u-flex-row {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}
.u-flex-column,
.react-datagrid {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}
.u-flex-centered {
  box-align: center;
  box-pack: center;
  align-items: center;
}
.u-inflexible,
.u-flex-0 {
  -webkit-box-flex: 0;
  -moz-box-flex: 0;
  -ms-box-flex: 0;
  -ms-flex: 0;
  -webkit-flex: 0;
  flex: 0;
  flex-shrink: 1;
  flex-basis: 1;
}
.u-flex-1 {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -ms-box-flex: 1;
  -ms-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  flex-shrink: 1;
  flex-basis: 1;
}
.u-flex-2 {
  -webkit-box-flex: 2;
  -moz-box-flex: 2;
  -ms-box-flex: 2;
  -ms-flex: 2;
  -webkit-flex: 2;
  flex: 2;
  flex-shrink: 1;
  flex-basis: 1;
}
.u-flex-3 {
  -webkit-box-flex: 3;
  -moz-box-flex: 3;
  -ms-box-flex: 3;
  -ms-flex: 3;
  -webkit-flex: 3;
  flex: 3;
  flex-shrink: 1;
  flex-basis: 1;
}
.u-flex-4 {
  -webkit-box-flex: 4;
  -moz-box-flex: 4;
  -ms-box-flex: 4;
  -ms-flex: 4;
  -webkit-flex: 4;
  flex: 4;
  flex-shrink: 1;
  flex-basis: 1;
}
.u-flex-5 {
  -webkit-box-flex: 5;
  -moz-box-flex: 5;
  -ms-box-flex: 5;
  -ms-flex: 5;
  -webkit-flex: 5;
  flex: 5;
  flex-shrink: 1;
  flex-basis: 1;
}
.u-flex-6 {
  -webkit-box-flex: 6;
  -moz-box-flex: 6;
  -ms-box-flex: 6;
  -ms-flex: 6;
  -webkit-flex: 6;
  flex: 6;
  flex-shrink: 1;
  flex-basis: 1;
}
.u-flex-7 {
  -webkit-box-flex: 7;
  -moz-box-flex: 7;
  -ms-box-flex: 7;
  -ms-flex: 7;
  -webkit-flex: 7;
  flex: 7;
  flex-shrink: 1;
  flex-basis: 1;
}
.u-flex-8 {
  -webkit-box-flex: 8;
  -moz-box-flex: 8;
  -ms-box-flex: 8;
  -ms-flex: 8;
  -webkit-flex: 8;
  flex: 8;
  flex-shrink: 1;
  flex-basis: 1;
}
.u-flex-9 {
  -webkit-box-flex: 9;
  -moz-box-flex: 9;
  -ms-box-flex: 9;
  -ms-flex: 9;
  -webkit-flex: 9;
  flex: 9;
  flex-shrink: 1;
  flex-basis: 1;
}
.u-flex-10 {
  -webkit-box-flex: 10;
  -moz-box-flex: 10;
  -ms-box-flex: 10;
  -ms-flex: 10;
  -webkit-flex: 10;
  flex: 10;
  flex-shrink: 1;
  flex-basis: 1;
}
.u-bold {
  font-weight: bold;
}
.u-nowrap {
  white-space: nowrap;
}
.u-nonav,
.u-unselectable {
  touch-callout: none;
}
.u-unselectable {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}
.u-height-auto {
  height: auto;
}
.u-width-auto {
  width: auto;
}
.u-height-fill,
.u-fill,
html.u-app,
html.u-app body {
  height: 100%;
}
.u-width-fill,
.u-fill,
html.u-app,
html.u-app body {
  width: 100%;
}
.u-margin-auto {
  margin: auto;
}
.u-border-box {
  box-sizing: border-box;
}
.u-border-box * {
  box-sizing: border-box;
}
.u-ellipsis,
.react-datagrid .z-column-header .z-inner .z-text,
.react-datagrid.z-cell-ellipsis .z-row .z-cell .z-text,
.react-datagrid .z-summary .z-cell .z-text {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
.u-absolute {
  position: absolute;
}
.u-relative {
  position: relative;
}
html.u-app,
html.u-app body {
  overflow: hidden;
  box-sizing: border-box;
}
html.u-app *,
html.u-app body * {
  box-sizing: border-box;
}
.z-unselectable,
.react-datagrid .z-header-menu-column .menu-row {
  touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}
.react-datagrid,
.react-datagrid * {
  box-sizing: border-box;
}
.react-datagrid .z-resize-proxy {
  position: absolute;
  height: 100%;
  top: 0px;
  display: none;
  width: 3px;
  border-left: 1px solid #868686;
}
.react-datagrid.z-columns-resizable .z-resize-proxy {
  display: block;
}
.react-datagrid {
  align-items: stretch;
  overflow: hidden;
}
.react-datagrid table {
  border-collapse: separate;
}
.react-datagrid > .z-inner {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -ms-box-flex: 1;
  -ms-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  overflow: hidden;
  position: relative;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex-direction: column;
  -webkit-flex-flow: column;
  -moz-flex-flow: column;
  -ms-flex-flow: column;
  -o-flex-flow: column;
  flex-flow: column;
  flex-flow: column;
  box-orient: vertical;
}
.react-datagrid > .z-inner .z-wrapper {
  position: relative;
  display: block;
  -webkit-box-flex: 1 1 auto;
  -moz-box-flex: 1 1 auto;
  -ms-box-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  -webkit-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow: hidden;
}
.react-datagrid .z-vertical-scroller {
  position: absolute;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
  right: 0px;
  top: 0px;
}
.react-datagrid .z-horizontal-scrollbar {
  position: absolute;
  width: 100%;
  left: 0px;
  bottom: 0px;
  overflow: auto;
}
.react-datagrid .z-vertical-scrollbar {
  position: absolute;
  height: 100%;
  top: 0px;
  right: 0px;
  overflow: auto;
}
.react-datagrid .z-horizontal-scroller {
  height: 1px;
  visibility: hidden;
}
.react-datagrid .z-vertical-scroller {
  width: 1px;
  visibility: hidden;
}
.react-datagrid .z-table-wrapper {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: auto;
  overflow-y: hidden;
}
.react-datagrid .z-header-wrapper,
.react-datagrid .z-footer-wrapper {
  width: 100%;
}
.react-datagrid .z-table {
  display: block;
}
.react-datagrid .z-header,
.react-datagrid .z-summary,
.react-datagrid .z-table .z-row {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex-direction: row;
  -webkit-flex-flow: row;
  -moz-flex-flow: row;
  -ms-flex-flow: row;
  -o-flex-flow: row;
  flex-flow: row;
  flex-flow: row;
  box-orient: horizontal;
}
.react-datagrid .z-mask-wrapper {
  bottom: 0px;
  width: 100%;
  position: absolute;
  display: none;
}
.react-datagrid.z-loading .z-mask-wrapper {
  display: block;
}
.react-datagrid .z-header-menu-column {
  background: #fff;
  position: absolute;
  top: 0px;
}
.react-datagrid .z-header-menu-column .menu-row.over {
  background: #d7e7ff;
}
.react-datagrid .z-header {
  align-items: stretch;
}
.react-datagrid.z-with-column-menu .z-column-header .z-show-filter,
.react-datagrid.z-with-column-menu .z-column-header .z-show-menu {
  display: none;
  position: absolute;
  cursor: pointer;
  right: 0px;
  top: 0px;
  width: 15px;
  height: 100%;
  border-left: 1px solid #a8a8a8;
}
.react-datagrid.z-with-column-menu .z-column-header .z-show-filter::after,
.react-datagrid.z-with-column-menu .z-column-header .z-show-menu::after {
  content: ' ';
  display: block;
  position: absolute;
  top: 50%;
  margin-top: -5px;
  margin-left: -5px;
  left: 50%;
  width: 0px;
  height: 0px;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 8px solid #6eb8f1;
}
.react-datagrid.z-with-column-menu .z-column-header .z-show-filter {
  right: 15px;
  background: #fff;
}
.react-datagrid.z-with-column-menu .z-column-header .z-show-filter::before {
  content: ' ';
  height: 8px;
  position: absolute;
  top: 50%;
  margin-left: -1px;
  left: 50%;
  margin-top: -$datagrid-column-menu-icon-width;
  display: block;
  border-left: 2px solid #6eb8f1;
}
.react-datagrid.z-with-column-menu .z-column-header.z-filterable .z-show-filter.z-active,
.react-datagrid.z-with-column-menu .z-column-header.z-filterable .z-show-filter:hover,
.react-datagrid.z-with-column-menu .z-column-header .z-show-menu.z-active,
.react-datagrid.z-with-column-menu .z-column-header .z-show-menu:hover {
  background: #fff;
}
.react-datagrid.z-with-column-menu .z-column-header.z-active .z-show-menu,
.react-datagrid.z-with-column-menu .z-column-header.z-active.z-filterable .z-show-filter,
.react-datagrid.z-with-column-menu .z-column-header.z-over .z-show-menu,
.react-datagrid.z-with-column-menu .z-column-header.z-over.z-filterable .z-show-filter {
  display: block;
}
.react-datagrid.z-with-column-menu .z-column-header.z-filtered {
  font-style: italic;
}
.react-datagrid .z-header-wrapper {
  -webkit-box-flex: 0 0 auto;
  -moz-box-flex: 0 0 auto;
  -ms-box-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  -webkit-flex: 0 0 auto;
  flex: 0 0 auto;
  background: linear-gradient(to bottom, #f7f7f7 0%, #efefef 13%, #e6e6e6 100%);
  border-bottom: 1px solid #a8a8a8;
}
.react-datagrid .z-header-wrapper.z-dragging .z-column-header:not(.z-drag) {
  transition: left 0.4s;
}
.react-datagrid .z-column-header {
  position: relative;
}
.react-datagrid .z-column-header .z-inner {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  align-items: center;
  align-content: flex-start;
  flex-direction: row;
  -webkit-flex-flow: row;
  -moz-flex-flow: row;
  -ms-flex-flow: row;
  -o-flex-flow: row;
  flex-flow: row;
  flex-flow: row;
  box-orient: horizontal;
  height: 100%;
  cursor: default;
  font-weight: bold;
}
.react-datagrid .z-column-header.z-sortable .z-inner {
  cursor: pointer;
}
.react-datagrid .z-column-header.z-over {
  background: linear-gradient(to bottom, #fbfbfb 0%, #f8f8f8 13%, #f4f4f4 100%);
}
.react-datagrid .z-column-header .z-icon-sort-info {
  display: inline-block;
  width: 0px;
  height: 0px;
  margin-left: 10px;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
}
.react-datagrid .z-column-header.z-asc .z-icon-sort-info {
  border-bottom: 8px solid #6eb8f1;
}
.react-datagrid .z-column-header.z-desc .z-icon-sort-info {
  border-top: 8px solid #6eb8f1;
}
.react-datagrid .z-column-header.z-drag {
  z-index: 1;
  background: linear-gradient(to bottom, #fbfbfb 0%, #f8f8f8 13%, #f4f4f4 100%);
  border-right: 1px solid #a8a8a8;
  border-left: 1px solid #a8a8a8;
}
.react-datagrid .z-column-header .z-column-resize {
  display: inline-block;
  height: 100%;
  width: 3px;
  right: 0px;
  cursor: e-resize;
  top: 0px;
  position: absolute;
  z-index: 10;
}
.react-datagrid .z-column-header.z-last .z-inner .z-column-resize {
  display: none !important;
}
.react-datagrid .z-header .z-column-header.z-cell:not(.z-first) {
  border-left: 1px solid #a8a8a8;
}
.react-datagrid .z-header .z-column-header.z-cell.z-last {
  border-right: 1px solid #a8a8a8;
}
.react-datagrid.z-style-alternate .z-odd .z-cell {
  background: #f2f7ff;
}
.react-datagrid .z-column-content {
  overflow: visible;
}
.react-datagrid .z-row.z-over .z-cell {
  background: #d7e7ff;
}
.react-datagrid .z-row.z-selected .z-cell {
  background: #ddebff;
}
.react-datagrid .z-row .z-cell {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  white-space: nowrap;
  overflow: hidden;
  cursor: default;
  position: relative;
}
.react-datagrid .z-row .z-cell .z-inner {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  align-items: center;
  width: 100%;
  height: 100%;
  position: absolute;
  margin: auto 0;
}
.react-datagrid .z-row .z-cell .z-inner .z-text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.react-datagrid .z-group-row.z-over .z-cell {
  background: #cfcfcf;
}
.react-datagrid .z-group-cell {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -ms-box-flex: 1;
  -ms-flex: 1;
  -webkit-flex: 1;
  flex: 1;
}
.react-datagrid .z-group-row .z-cell {
  background: #e6e6e6;
}
.react-datagrid.z-cell-borders-horizontal .z-cell:not(.z-column-header) {
  border-bottom: 1px dotted #a8a8a8;
}
.react-datagrid.z-cell-borders-vertical .z-group-row .z-cell:not(.z-column-header),
.react-datagrid.z-cell-borders-vertical .z-cell.z-last:not(.z-column-header) {
  border-right: 1px dotted #a8a8a8;
}
.react-datagrid.z-cell-borders-vertical .z-cell:not(.z-first):not(.z-column-header) {
  border-left: 1px dotted #a8a8a8;
}
.react-datagrid .z-footer-wrapper {
  background: linear-gradient(to bottom, #f7f7f7 0%, #efefef 13%, #e6e6e6 100%);
}
.react-datagrid .z-summary {
  border-top: 1px solid #a8a8a8;
  align-items: stretch;
}
.react-datagrid .z-summary .z-cell {
  position: relative;
  border-bottom: 1px solid #a8a8a8;
}
.react-datagrid .z-summary .z-cell .z-inner {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  align-items: center;
  align-content: flex-start;
  flex-direction: row;
  -webkit-flex-flow: row;
  -moz-flex-flow: row;
  -ms-flex-flow: row;
  -o-flex-flow: row;
  flex-flow: row;
  flex-flow: row;
  box-orient: horizontal;
  height: 100%;
}
.react-datagrid .z-summary .z-cell.z-last {
  border-right: 1px solid #a8a8a8;
}
.react-datagrid .z-summary .z-cell:not(.z-first) {
  border-left: 1px solid #a8a8a8;
}
@-moz-keyframes loader-fade {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.25;
  }
}
@-webkit-keyframes loader-fade {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.25;
  }
}
@-o-keyframes loader-fade {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.25;
  }
}
@keyframes loader-fade {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.25;
  }
}
